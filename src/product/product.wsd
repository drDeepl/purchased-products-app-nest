@startuml product



class ProductController {
  - productService: ProductService
  - logger: Logger
  + addProduct(addProductDto: AddProductDto): Promise<AddedProductDto>
  + addNewCategory(addCategory: AddCategoryDto): Promise<CategoryDto>
  + editProduct(editProductDto: EditProductDto,productId: number): Promise<AddedProductDto> 
  + findCategories(): Promise<CategoryDto[]>
  + deleteCategoryById(categoryId: number)
  }

class ProductService {
  - logger: Logger
  - prisma: PrismaService

  + addProduct(addProductDto: AddProductDto): Promise<AddedProductDto>
  + editProduct(editProductDto: EditProductDto,productId: number): Promise<AddedProductDto> 
  + deleteProduct(productId: number)
  + addCategory(addCategoryDto: AddCategoryDto): Promise<CategoryDto>
  + getCategories(): Promise<CategoryDto[]>
  + deleteCategory(categoryId: number)
  + editCategory(editCategoryDto: EditCategoryDto, categoryId: number): Promise<CategoryDto>
}

ProductController --> ProductService

class BaseProductDto{
    +name: string
    +categoryId: number
}

class AddProductDto{}

class AddedProductDto{
    +id: number
}

BaseProductDto <|-- AddProductDto
BaseProductDto <|-- AddedProductDto
BaseProductDto <|-- EditProductDto

class BaseCategory{
    +name: string
}

class EditCategoryDto{}

class CategoryDto{
    +id:number
}

BaseCategoryDto <|-- AddCategoryDto
BaseCategoryDto <|-- EditCategoryDto
BaseCategoryDto <|-- CategoryDto




@enduml